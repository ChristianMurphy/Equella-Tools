# JMeter properties for rest-item-life-cycle.properties

##############################
### General server configs ###
##############################

protocol=http
server=equella-base-url
port=
institution=/benchmarkbig

#####################
### Test controls ###
#####################

# Delay (in milliseconds) between each HTTP Sampler
sample.delay=100

num.of.users=1

ramp.up=0

#loop.count takes precedence over schedule.duration.  
#Comment out or set to [-1] if you want only want schedule.duration to be in effect.
loop.count=1

#In seconds
schedule.duration=99999

# This collection uuid should match your target collection
collection.uuid=9304dc29-a5e2-46a2-8a07-af4296d8856b	

# Doesn't really matter what the name of the test item is
item.name=Benchmark test item	

# Currently understands 6.2, 6.3, and 6.4 (to test a 6.4 install, specify:  6.2,6.3,6.4)
included.versions=6.2,6.3

######################
### Authentication ###
######################

# Test user base - no tle_admin impersonation.  
# i.e. if the jmeteruser is a prefix - the __threadnum variable is appended 
# to this value for the 'real' username such as jmeteruser47.
username=
password=

#OAuth Client Setup.  Uses implicit grant (meaning will run as the user the thread is using (i.e. jmeteruser47)
oauth.client.id=EQ-Benchmark-Testing-Implicit-Grant

#This is the confirmation message that Equella presents in the auth process
oauth.client.app.confirmation=Do you want to authorise the application 'EQ Benchmark Testing - Implicit Grant' to access your EQUELLA account?


####################
### Flow Control ###
####################
#Setting to [Y] will edit the item (version 1) via REST and add a new small attachment.  Default is [N]
#Note:  There is an oddity in the script - when editItem is N, newVersion's file upload code
#       changes (thus the assertion fails).  For now, if editItem is N, newVersion should be N.
flow.editItem=Y

#Setting to [Y] will add a comment to the item (version 1), retrieve all comments for the item, 
#and delete the comment via REST.  Default is [N]
flow.commentItem=Y

#Setting to [Y] will 'GET' the item (version 1) via REST with full details.  Default is [N]
flow.viewItem=Y

#Setting to [Y] will 'GET' the item's image attachment (version 1) via the /items/uuid/version?attachment.uuid=uuid link. Default is [N]
flow.viewItemImageAttachment=Y

#Setting to [Y] will create a new version of the item via REST and add a new small attachment.  Default is [N]
flow.newVersionItem=Y

#Setting to [Y] will delete the item (both versions if flow.newVersionItem is Y) via REST.  Default is [N]
flow.deleteItem=Y

#Setting to [Y] will purge the item (both versions if flow.newVersionItem is Y) via REST - 
#does not need deleteItem to be [Y].  Default is [N]
# NOTE:  NOT IMPLEMENTED YET.
flow.purgeItem=N

##########################
### Attachment Details ###
##########################

# Each sample loop includes an attachment in the created item, 
# and a second attachment while editing the item.
attachment.path=/path/to/the/assets

attachment.for.contribution.filename=eqTestImageSmall.JPG	
# This might change slightly at times, so the script allows a range
attachment.for.contribution.size.in.bytes.lower=18974
attachment.for.contribution.size.in.bytes.upper=18979
attachment.for.contribution.content.type=image/jpeg

attachment.for.edit.filename=eqTestPdf.PDF	

attachment.for.newversion.filename=eqTestTxt.TXT	

